# -------------------------------
# 1Ô∏è‚É£ SSH Verification
# -------------------------------
echo "=== SSH Verification ==="
ssh -T git@github.com || echo "‚ùå SSH connection failed! Check your key."
echo

# -------------------------------
# 2Ô∏è‚É£ GPG Verification
# -------------------------------
echo "=== GPG Verification ==="
# List secret keys and show long Key ID
gpg --list-secret-keys --keyid-format=long

# Create a temporary signed commit to verify GPG
TEMP_FILE="gpg_verification_test.txt"
echo "Vigilant Mode Test" > $TEMP_FILE
git add $TEMP_FILE

# Get default GPG key (adjust if needed)
GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format=long | grep sec | awk '{print $2}' | cut -d'/' -f2)
if [ -z "$GPG_KEY_ID" ]; then
    echo "‚ùå No GPG key found! Add a GPG key first."
else
    git commit -S -m "Test commit for GPG verification" || echo "‚ùå GPG commit failed. Check your signing key."
    echo "‚úÖ GPG commit created. Push and check GitHub for Verified badge."
fi

# Clean up temporary file
git reset HEAD $TEMP_FILE
rm -f $TEMP_FILE
echo

# -------------------------------
# 3Ô∏è‚É£ PAT / HTTPS Verification (optional)
# -------------------------------
echo "=== PAT / HTTPS Verification ==="
git ls-remote https://github.com/rampaulsaini/Omniverse-AI.git || echo "‚ùå HTTPS/PAT not working"
echo

# -------------------------------
# 4Ô∏è‚É£ Vigilant Mode readiness
# -------------------------------
echo "=== Vigilant Mode Readiness ==="
echo "‚úÖ Ensure primary email on GitHub is verified"
echo "‚úÖ Ensure at least one verified method exists (SSH, GPG, or PAT)"
echo "‚úÖ If all checks passed, refresh Developer Settings ‚Üí Vigilant Mode page. It should show Verified."
echo
echo "üéâ All set! You can now enable Vigilant Mode safely."
